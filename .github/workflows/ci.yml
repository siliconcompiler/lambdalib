name: CI
on:
  # Runs on pushes to test/ branches and main
  push:
    branches:
      - 'main'
      - 'test/**'
  # Runs on all PRs
  pull_request:
  # Manual Dispatch
  workflow_dispatch:

jobs:
  lint_python:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Lint with Flake8
        run: |
          python3 -m venv .venv
          . .venv/bin/activate

          pip install --upgrade pip
          pip install .[dev]
          flake8 --statistics .

  python_ci:
    name: Run Python Only
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          python3 -m venv .venv
          . .venv/bin/activate

          pip install --upgrade pip
          pip install .[dev]

          # change running directory
          mkdir testrun
          cd testrun

          pytest $GITHUB_WORKSPACE -m "not eda"

  lint_verilog:
    name: Lint Verilog Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Check out siliconcompiler Git repository
        uses: actions/checkout@v4
        with:
          repository: siliconcompiler/siliconcompiler
          path: siliconcompiler

      - name: Set up Verible
        run: |
          ./siliconcompiler/siliconcompiler/toolscripts/ubuntu22/install-verible.sh
          echo /opt/verible/bin >> $GITHUB_PATH

      - name: Check format
        id: check-format
        run: |
          ./.github/workflows/bin/format_verilog.sh > files.txt
          cat files.txt
          git diff --exit-code

      - name: Check lint
        if: success() || steps.check-format.conclusion == 'failure'
        run: |
          verible-verilog-lint --rules_config ./.github/workflows/config/verible.rules `cat files.txt`

  eda_ci:
    name: Run EDA
    runs-on: ubuntu-latest
    container: ghcr.io/siliconcompiler/sc_runner:latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Run tests
        run: |
          python3 -m venv .venv
          . .venv/bin/activate

          pip install --upgrade pip
          pip install .[dev]

          # change running directory
          mkdir testrun
          cd testrun

          pytest $GITHUB_WORKSPACE -m "eda"
